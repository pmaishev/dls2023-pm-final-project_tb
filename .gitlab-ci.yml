image: docker:latest

services:
  - docker:dind

stages:
  - qa
  - build-base
  - build
  - deploy

.docker_login_template: &docker_login
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login $DOCKER_REGISTRY --username $DOCKER_USERNAME --password-stdin

variables: &base-variables
    GIT_SUBMODULE_STRATEGY: recursive
    DOCKER_REGISTRY: "registry.gitlab.com"
    DOCKER_USERNAME: "gitlab-ci-token"
    GROUP_NAME: dls2023-pm-final-project
    PROJECT_NAME: bot
    VERSION: "$CI_PIPELINE_IID"

lint and test:
  variables:
      <<: *base-variables
      GIT_SUBMODULE_STRATEGY: recursive
  stage: qa
  image: python:3.8-slim
  script:
    - pip install -r requirements.txt
    - pip install pylint
    - find ./ -iname "*.py"| xargs pylint --max-line-length=140 --generated-members="numpy.* ,torch.*" -E
    - python tests/test.py
  except:
    changes:
      - "*.md"

build-base:
  variables:
      <<: *base-variables
      GIT_SUBMODULE_STRATEGY: recursive
  stage: build-base
  <<: *docker_login
  script:
    - docker build -t $CI_REGISTRY_IMAGE/base:latest -f build/DockerfileBase .
    - docker push $CI_REGISTRY_IMAGE/base:latest
    - echo $CI_REGISTRY_IMAGE/base:latest
    - docker rmi $CI_REGISTRY_IMAGE/base:latest
  only:
    refs:
      - main
      - devel
    changes:
      - "requirements.txt"
      - "cnn/*"
      - "build/DockerfileBase"

build:
  variables:
      <<: *base-variables
      GIT_SUBMODULE_STRATEGY: recursive
  stage: build
  <<: *docker_login
  script:
    - echo "ver = \"$GROUP_NAME $PROJECT_NAME $CI_COMMIT_REF_NAME $VERSION\"" > version.py
    - mkdir -p build/app/data_test
    - cp *.py build/app
    - cp requirements.txt build/app/
    - cp -r model build/app
    - cp -r data_test/* build/app/data_test
    - docker build -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$VERSION -f build/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$VERSION
    - echo $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$VERSION
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$VERSION $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    - echo $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    - docker rmi $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$VERSION
  only:
    - main
    - devel
  except:
    changes:
      - "*.md"

deploy:
  stage: deploy
  variables:
      <<: *base-variables
      GIT_STRATEGY: none
  image: pmaishev/rancher:6
  <<: *docker_login
  script:
    - export RANCHER_URL=$RANCHER_DEV_URL
    - export RANCHER_ACCESS_KEY=$RANCHER_DEV_ACCESS_KEY
    - export RANCHER_SECRET_KEY=$RANCHER_DEV_SECRET_KEY
    - export RANCHER_STACK=dls
    - export RANCHER_ENVIRONMENT=Pmaishev
    - export RANCHER_IMAGE=$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$VERSION
    - export RANCHER_SERVICE=bot
    - cd /app && node rancher.js
  only:
    - devel
    - main
  except:
    changes:
      - "*.md"
